# # 工作流名称：定义这个GitHub Actions工作流的名称
# name: 自动更新 index.html

# # 触发条件：指定什么情况下会运行这个工作流
# on:
#   push:
#     # 仅当推送到main分支时触发
#     branches: [ main ]
#     # 仅当以下路径的文件发生变化时才触发（优化性能，避免不必要的运行）
#     paths:
#       - 'code-note/**'         # 监控code-note目录下所有文件的变化
#       - 'generate_index.py'   # 监控生成脚本的变化
#       - '.github/workflows/update-index.yml'  # 监控工作流文件本身的变化

# # 工作流任务定义：包含一个或多个要执行的任务
# jobs:
#   # 任务名称：update-index（更新索引文件）
#   update-index:
#     # 运行环境：使用最新的Ubuntu系统
#     runs-on: ubuntu-latest
    
#     # 权限配置：授予工作流操作仓库内容的权限
#     permissions:
#       contents: write  # 关键设置：允许工作流写入/推送内容到仓库
    
#     # 步骤定义：任务的具体执行步骤
#     steps:
#       # 步骤1：检出代码仓库
#       - name: 检出代码
#         uses: actions/checkout@v4  # 使用官方的checkout动作，版本v4
#         with:
#           fetch-depth: 0  # 获取完整的代码历史，避免推送时出现冲突
#           # 不指定token，使用默认的GITHUB_TOKEN，配合上面的permissions配置获取权限
          
#       # 步骤2：设置Python运行环境
#       - name: 设置 Python 环境
#         uses: actions/setup-python@v5  # 使用官方的Python环境配置动作，版本v5
#         with:
#           python-version: '3.10'  # 指定使用Python 3.10版本
    
#       # 步骤3：执行Python脚本生成index.html
#       - name: 生成 index.html
#         run: python generate_index.py  # 运行生成脚本，生成最新的index.html
    
#       # 步骤4：自动提交并推送更新后的index.html
#       - name: 提交 index.html 更新
#         uses: stefanzweifel/git-auto-commit-action@v5  # 使用自动提交动作，版本v5
#         with:
#           file_pattern: 'index.html'  # 仅提交index.html文件的变更
#           # 提交信息：清晰说明这是由GitHub Actions自动生成的更新
#           commit_message: '🔄 自动更新 index.html（由 GitHub Actions 触发）'
#           # 提交者信息设置
#           commit_user_name: 'GitHub Actions Bot'  # 提交者用户名
#           commit_user_email: 'actions@github.com'  # 提交者邮箱
#           # 不使用token参数，通过job级别的permissions配置获取权限
    